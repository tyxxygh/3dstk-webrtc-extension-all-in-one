# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

config("cryptopp_config") {
# cflags = [ "/WX-" ]
  cflags = []
  if (is_win && !is_winuwp)
  {
    cflags += ["/EHsc"]
  }
}

static_library("cryptopp") {

  configs += [ ":cryptopp_config" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  if (!is_win) {
    configs -= [ "//build/config/gcc:no_exceptions" ]
  }
  configs -= [ "//build/config/compiler:chromium_code" ]

  sources = [
    "3way.h",
    "adler32.h",
    "aes.h",
    "algebra.h",
    "algparam.h",
    "allocatorwithnul.h",
    "arc4.h",
    "argnames.h",
    "asn.h",
    "authenc.h",
    "base32.h",
    "base64.h",
    "basecode.h",
    "bench.h",
    "blake2.h",
    "blowfish.h",
    "blumshub.h",
    "camellia.h",
    "cast.h",
    "cbcmac.h",
    "ccm.h",
    "chacha.h",
    "channels.h",
    "cmac.h",
    "config.h",
    "cpu.h",
    "crc.h",
    "cryptlib.h",
    "default.h",
    "des.h",
    "dh2.h",
    "dh.h",
    "dll.h",
    "dmac.h",
    "dsa.h",
    "eax.h",
    "ec2n.h",
    "eccrypto.h",
    "ecp.h",
    "elgamal.h",
    "emsa2.h",
    "eprecomp.h",
    "esign.h",
    "factory.h",
    "fhmqv.h",
    "files.h",
    "filters.h",
    "fips140.h",
    "fltrimpl.h",
    "gcm.h",
    "gf2_32.h",
    "gf256.h",
    "gf2n.h",
    "gfpcrypt.h",
    "gost.h",
    "gzip.h",
    "hex.h",
    "hkdf.h",
    "hmac.h",
    "hmqv.h",
    "hrtimer.h",
    "ida.h",
    "idea.h",
    "integer.h",
    "iterhash.h",
    "keccak.h",
    "lubyrack.h",
    "luc.h",
    "mars.h",
    "md2.h",
    "md4.h",
    "md5.h",
    "mdc.h",
    "mersenne.h",
    "misc.h",
    "modarith.h",
    "modes.h",
    "modexppc.h",
    "mqueue.h",
    "mqv.h",
    "nbtheory.h",
    "network.h",
    "nr.h",
    "oaep.h",
    "oids.h",
    "osrng.h",
    "panama.h",
    "pch.h",
    "pkcspad.h",
    "polynomi.h",
    "pssr.h",
    "pubkey.h",
    "pwdbased.h",
    "queue.h",
    "rabin.h",
    "randpool.h",
    "rc2.h",
    "rc5.h",
    "rc6.h",
    "rdrand.h",
    "resource.h",
    "rijndael.h",
    "ripemd.h",
    "rng.h",
    "rsa.h",
    "rw.h",
    "safer.h",
    "salsa.h",
    "seal.h",
    "secblock.h",
    "seckey.h",
    "seed.h",
    "serpent.h",
    "serpentp.h",
    "sha3.h",
    "shacal2.h",
    "sha.h",
    "shark.h",
    "simple.h",
    "skipjack.h",
    "smartptr.h",
    "socketft.h",
    "sosemanuk.h",
    "square.h",
    "stdcpp.h",
    "strciphr.h",
    "tea.h",
    "tiger.h",
    "trap.h",
    "trdlocal.h",
    "trunhash.h",
    "ttmac.h",
    "twofish.h",
    "validate.h",
    "vmac.h",
    "wait.h",
    "wake.h",
    "whrlpool.h",
    "winpipes.h",
    "words.h",
    "xtrcrypt.h",
    "xtr.h",
    "zdeflate.h",
    "zinflate.h",
    "zlib.h",
    "3way.cpp",
    "adler32.cpp",
    "algebra.cpp",
    "algparam.cpp",
    "arc4.cpp",
    "asn.cpp",
    "authenc.cpp",
    "base32.cpp",
    "base64.cpp",
    "basecode.cpp",
    "bench1.cpp",
    "bench2.cpp",
    "bfinit.cpp",
    "blake2.cpp",
    "blowfish.cpp",
    "blumshub.cpp",
    "camellia.cpp",
    "cast.cpp",
    "casts.cpp",
    "cbcmac.cpp",
    "ccm.cpp",
    "chacha.cpp",
    "channels.cpp",
    "cmac.cpp",
    "cpu.cpp",
    "crc.cpp",
    "cryptlib.cpp",
    "datatest.cpp",
    "default.cpp",
    "des.cpp",
    "dessp.cpp",
    "dh2.cpp",
    "dh.cpp",
    "dll.cpp",
    "dlltest.cpp",
    "dsa.cpp",
    "eax.cpp",
    "ec2n.cpp",
    "eccrypto.cpp",
    "ecp.cpp",
    "elgamal.cpp",
    "emsa2.cpp",
    "eprecomp.cpp",
    "esign.cpp",
    "files.cpp",
    "filters.cpp",
    "fips140.cpp",
    "fipsalgt.cpp",
    "fipstest.cpp",
    "gcm.cpp",
    "gf2_32.cpp",
    "gf256.cpp",
    "gf2n.cpp",
    "gfpcrypt.cpp",
    "gost.cpp",
    "gzip.cpp",
    "hex.cpp",
    "hmac.cpp",
    "hrtimer.cpp",
    "ida.cpp",
    "idea.cpp",
    "integer.cpp",
    "iterhash.cpp",
    "keccak.cpp",
    "luc.cpp",
    "mars.cpp",
    "marss.cpp",
    "md2.cpp",
    "md4.cpp",
    "md5.cpp",
    "misc.cpp",
    "modes.cpp",
    "mqueue.cpp",
    "mqv.cpp",
    "nbtheory.cpp",
    "network.cpp",
    "oaep.cpp",
    "osrng.cpp",
    "panama.cpp",
    "pch.cpp",
    "pkcspad.cpp",
    "polynomi.cpp",
    "pssr.cpp",
    "pubkey.cpp",
    "queue.cpp",
    "rabin.cpp",
    "randpool.cpp",
    "rc2.cpp",
    "rc5.cpp",
    "rc6.cpp",
    "rdrand.cpp",
    "rdtables.cpp",
    "regtest.cpp",
    "rijndael.cpp",
    "ripemd.cpp",
    "rng.cpp",
    "rsa.cpp",
    "rw.cpp",
    "safer.cpp",
    "salsa.cpp",
    "seal.cpp",
    "seed.cpp",
    "serpent.cpp",
    "sha3.cpp",
    "shacal2.cpp",
    "sha.cpp",
    "sharkbox.cpp",
    "shark.cpp",
    "simple.cpp",
    "skipjack.cpp",
    "socketft.cpp",
    "sosemanuk.cpp",
    "square.cpp",
    "squaretb.cpp",
    "strciphr.cpp",
    "tea.cpp",
    "test.cpp",
    "tftables.cpp",
    "tiger.cpp",
    "tigertab.cpp",
    "trdlocal.cpp",
    "ttmac.cpp",
    "twofish.cpp",
    "validat1.cpp",
    "validat2.cpp",
    "validat3.cpp",
    "vmac.cpp",
    "wait.cpp",
    "wake.cpp",
    "whrlpool.cpp",
    "winpipes.cpp",
    "xtr.cpp",
    "xtrcrypt.cpp",
    "zdeflate.cpp",
    "zinflate.cpp",
    "zlib.cpp",
  ]
  
   if (is_win && current_cpu == "x64")
   {
      sources += [ "x64dll.asm", ]
   }

  sources -= [
    "datatest.cpp",
    "bench1.cpp",
    "dlltest.cpp",
    "validat1.cpp",
    "fipsalgt.cpp",
    "bench2.cpp",
    "validat3.cpp",
    "regtest.cpp",
    "fipstest.cpp",
    "test.cpp",
    "validat2.cpp",
  ]
  defines = [
    "_UNICODE",
    "UNICODE",
  ]

}
