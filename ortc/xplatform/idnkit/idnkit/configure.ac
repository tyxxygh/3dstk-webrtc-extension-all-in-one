dnl
dnl                           TERMS AND CONDITIONS
dnl                                   FOR
dnl                         OPEN SOURCE CODE LICENSE
dnl                               Version 1.1
dnl 
dnl Japan Registry Services Co., Ltd. ("JPRS"), a Japanese corporation
dnl having its head office at Chiyoda First Bldg. East 13F 3-8-1 Nishi-Kanda,
dnl Chiyoda-ku, Tokyo 101-0065, Japan, grants you the license for open source
dnl code specified in EXHIBIT A the "Code" subject to the following Terms and
dnl Conditions ("OSCL").
dnl 
dnl 1. License Grant.
dnl   JPRS hereby grants you a worldwide, royalty-free, non-exclusive
dnl   license, subject to third party intellectual property claims:
dnl   (a) under intellectual property rights (other than patent or
dnl       trademark) licensable by JPRS to use, reproduce, modify, display,
dnl       perform, sublicense and distribute the Code (or portions thereof)
dnl       with or without modifications, and/or as part of a derivative work;
dnl       or
dnl   (b) under claims of the infringement through the making, using,
dnl       offering to sell and/or otherwise disposing the JPRS Revised Code
dnl       (or portions thereof);
dnl   (c) the licenses granted in this Section 1(a) and (b) are effective on
dnl       the date JPRS first distributes the Code to you under the terms of
dnl       this OSCL;
dnl   (d) Notwithstanding the above stated terms, no patent license is
dnl       granted:
dnl       1)  for a code that you delete from the Code;
dnl       2)  separate from the Code; or
dnl       3)  for infringements caused by:
dnl            i) modification of the Code; or
dnl           ii) combination of the Code with other software or devices.
dnl 
dnl 2. Consents.
dnl   You agree that:
dnl   (a) you must include a copy of this OSCL and the notice set forth in
dnl       EXHIBIT A with every copy of the Code you distribute;
dnl   (b) you must include a copy of this OSCL and the notice set forth in
dnl       EXHIBIT A with every copy of binary form of the Code in the
dnl       documentation and/or other materials provided with the distribution;
dnl   (c) you may not offer or impose any terms on any source code version
dnl       that alters or restricts the applicable version of this OSCL or
dnl       the recipients' rights hereunder.
dnl   (d) If the terms and conditions are set forth in EXHIBIT A, you must
dnl       comply with those terms and conditions.
dnl 
dnl 3. Proprietary Information.
dnl   All trademarks, service marks, patents, copyrights, trade secrets, and
dnl   other proprietary rights in or related to the Code are and will remain
dnl   the exclusive property of JPRS or its licensors, whether or not
dnl   specifically recognized or perfected under local law except specified
dnl   in this OSCL; provided however you agree and understand that the JPRS
dnl   name may not be used to endorse or promote this Code without prior
dnl   written approval of JPRS.
dnl 
dnl 4. WARRANTY DISCLAIMER.
dnl   JPRS MAKES NO REPRESENTATIONS AND WARRANTIES REGARDING THE USE OF THE
dnl   CODE, NOR DOES JPRS MAKE ANY REPRESENTATIONS THAT THE CODE WILL BECOME
dnl   COMMERCIALLY AVAILABLE. JPRS, ITS AFFILIATES, AND ITS SUPPLIERS DO NOT
dnl   WARRANT OR REPRESENT THAT THE CODE IS FREE OF ERRORS OR THAT THE CODE
dnl   IS SUITABLE FOR TRANSLATION AND/OR LOCALIZATION. THE CODE IS PROVIDED
dnl   ON AN "AS IS" BASIS AND JPRS AND ITS SUPPLIERS HAVE NO OBLIGATION TO
dnl   CORRECT ERRORS OR TO SUPPORT THE CODE UNDER THIS OSCL FOR ANY REASON.
dnl   TO THE FULL EXTENT PERMITTED BY LAW, ALL OBLIGATIONS ARE HEREBY
dnl   EXCLUDED WHETHER EXPRESS, STATUTORY OR IMPLIED UNDER LAW, COURSE OF
dnl   DEALING, CUSTOM, TRADE USAGE, ORAL OR WRITTEN STATEMENT OR OTHERWISE,
dnl   INCLUDING BUT NOT LIMITED TO ANY IMPLIED WARRANTIES OF MERCHANTABILITY
dnl   OR FITNESS FOR A PARTICULAR PURPOSE CONCERNING THE CODE.
dnl 
dnl 5. NO LIABILITY.
dnl   UNDER NO CIRCUMSTANCES SHALL JPRS AND/OR ITS AFFILIATES, LICENSORS, OR
dnl   REPRESENTATIVES BE LIABLE FOR ANY DAMAGES INCLUDING BUT NOT LIMITED TO
dnl   CONSEQUENTIAL, INDIRECT, SPECIAL, PUNITIVE OR INCIDENTAL DAMAGES,
dnl   WHETHER FORESEEABLE OR UNFORESEEABLE, BASED ON YOUR CLAIMS, INCLUDING,
dnl   BUT NOT LIMITED TO, CLAIMS FOR LOSS OF DATA, GOODWILL, PROFITS, USE OF
dnl   MONEY, INTERRUPTION IN USE OR AVAILABILITY OF DATA, STOPPAGE, IMPLIED
dnl   WARRANTY, BREACH OF CONTRACT, MISREPRESENTATION, NEGLIGENCE, STRICT
dnl   LIABILITY IN TORT, OR OTHERWISE.
dnl 
dnl 6. Indemnification.
dnl   You hereby agree to indemnify, defend, and hold harmless JPRS for any
dnl   liability incurred by JRPS due to your terms of warranty, support,
dnl   indemnity, or liability offered by you to any third party.
dnl 
dnl 7. Termination.
dnl 7.1 This OSCL shall be automatically terminated in the events that:
dnl   (a) You fail to comply with the terms herein and fail to cure such
dnl       breach within 30 days of becoming aware of the breach;
dnl   (b) You initiate patent or copyright infringement litigation against
dnl       any party (including a cross-claim or counterclaim in a lawsuit)
dnl       alleging that the Code constitutes a direct or indirect patent or
dnl       copyright infringement, in such case, this OSCL to you shall
dnl       terminate as of the date such litigation is filed;
dnl 7.2 In the event of termination under Sections 7.1(a) or 7.1(b) above,
dnl     all end user license agreements (excluding distributors and
dnl     resellers) which have been validly granted by You or any distributor
dnl     hereunder prior to termination shall survive termination.
dnl
dnl 
dnl 8. General.
dnl   This OSCL shall be governed by, and construed and enforced in
dnl   accordance with, the laws of Japan. Any litigation or arbitration
dnl   between the parties shall be conducted exclusively in Tokyo, Japan
dnl   except written consent of JPRS provides other venue.
dnl 
dnl 
dnl                                EXHIBIT A
dnl 
dnl The original open source code of idnkit-2 is idnkit-1.0 developed and
dnl conceived by Japan Network Information Center ("JPNIC"), a Japanese
dnl association, Kokusai-Kougyou-Kanda Bldg 6F, 2-3-4 Uchi-Kanda,
dnl Chiyoda-ku, Tokyo 101-0047, Japan, and JPRS modifies above original code
dnl under following Terms and Conditions set forth by JPNIC.
dnl 
dnl                                  JPNIC
dnl 
dnl Copyright (c) 2000-2002 Japan Network Information Center.  All rights reserved.
dnl 
dnl By using this file, you agree to the terms and conditions set forth bellow.
dnl 
dnl                       LICENSE TERMS AND CONDITIONS
dnl 
dnl The following License Terms and Conditions apply, unless a different
dnl license is obtained from Japan Network Information Center ("JPNIC"),
dnl a Japanese association, Kokusai-Kougyou-Kanda Bldg 6F, 2-3-4 Uchi-Kanda,
dnl Chiyoda-ku, Tokyo 101-0047, Japan.
dnl 
dnl 1. Use, Modification and Redistribution (including distribution of any
dnl    modified or derived work) in source and/or binary forms is permitted
dnl    under this License Terms and Conditions.
dnl 
dnl 2. Redistribution of source code must retain the copyright notices as they
dnl    appear in each source code file, this License Terms and Conditions.
dnl 
dnl 3. Redistribution in binary form must reproduce the Copyright Notice,
dnl    this License Terms and Conditions, in the documentation and/or other
dnl    materials provided with the distribution. For the purposes of binary
dnl    distribution the "Copyright Notice" refers to the following language:
dnl    "Copyright (c) 2000-2002 Japan Network Information Center.  All rights reserved."
dnl 
dnl 4. The name of JPNIC may not be used to endorse or promote products
dnl    derived from this Software without specific prior written approval of
dnl    JPNIC.
dnl 
dnl 5. Disclaimer/Limitation of Liability: THIS SOFTWARE IS PROVIDED BY JPNIC
dnl    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
dnl    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
dnl    PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JPNIC BE LIABLE
dnl    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
dnl    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
dnl    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
dnl    BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
dnl    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
dnl    OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
dnl    ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
dnl 
dnl 
dnl                        JPRS Public License Notice
dnl                                   For
dnl                                idnkit-2.
dnl 
dnl The contents of this file are subject to the Terms and Conditions for
dnl the Open Source Code License (the "OSCL"). You may not use this file
dnl except in compliance with above terms and conditions. A copy of the OSCL
dnl is available at <http://jprs.co.jp/idn/>.
dnl The JPRS Revised Code is idnkit-2.
dnl The Initial Developer of the JPRS Revised Code is Japan Network
dnl Information Center ("JPNIC"), a Japanese association,
dnl Kokusai-Kougyou-Kanda Bldg 6F, 2-3-4 Uchi-Kanda, Chiyoda-ku, Tokyo
dnl 101-0047, Japan.
dnl "Copyright (c) 2000-2002 Japan Network Information Center.  All rights reserved."
dnl "Copyright (c) 2010-2013 Japan Registry Services Co., Ltd.  All rights reserved."
dnl Contributor(s): ______________________________________.
dnl 
dnl If you wish to allow use of your version of this file only under the
dnl above License(s) and not to allow others to use your version of this
dnl file, please indicate your decision by deleting the relevant provisions
dnl above and replacing them with the notice and other provisions required
dnl by the above License(s). If you do not delete the relevant provisions,
dnl a recipient may use your version of this file under either the above
dnl License(s).
dnl

AC_INIT(idnkit, 2.3)
AC_CONFIG_SRCDIR(include/idn/api.h)
AC_PREREQ(2.65)
AM_INIT_AUTOMAKE

MAJOR_VERSION=2
AC_SUBST(MAJOR_VERSION)

MINOR_VERSION=2
AC_SUBST(MINOR_VERSION)

LIB_VERSION_INFO=2:3:0
AC_SUBST(LIB_VERSION_INFO)
AC_LANG(C)

dnl *
dnl * --with-utf8 option.
dnl *
UTF8_NAME=no
AC_ARG_WITH(utf8,
        AC_HELP_STRING([--with-utf8=NAME],
                [codeset name for UTF-8 encoding [UTF-8]]),
        [UTF8_NAME=$withval], [UTF8_NAME='UTF-8'])
case "$UTF8_NAME" in
no)
    UTF8_NAME=UTF-8
    ;;
yes)
    AC_MSG_ERROR([You must specify NAME to --with-utf8 option.])
    ;;
*)
    AC_DEFINE_UNQUOTED(IDN_UTF8_ENCODING_NAME, "$UTF8_NAME",
        [Define if your iconv() does not accept "UTF-8" as the codeset name for utf-8.])
    ;;
esac
AC_SUBST(UTF8_NAME)

dnl *
dnl * --enable-liteonly option.
dnl *
liteonly=no
AC_ARG_ENABLE(liteonly,
    AC_HELP_STRING([--enable-liteonly],
        [compile and install lite library only [default=no]]),
[case "${enableval}" in
   yes) liteonly=yes  ;;
   no)  liteonly==no ;;
   *)   AC_MSG_ERROR(invalid argument to --enable-liteonly) ;;
esac], liteonly=no)
AM_CONDITIONAL(LITEONLY, test ${liteonly} = yes)

dnl *
dnl * --with-libiconv option.
dnl *
ICONVINC=
ICONVLIB=

libiconv=unspec
AC_ARG_WITH(libiconv,
    AC_HELP_STRING([--with-libiconv=IPREFIX],
        [GNU libiconv are installed in IPREFIX [PREFIX]]),
    libiconv=$withval)
case "$libiconv" in
unspec)
    ;;
no)
    ICONVINC=
    ICONVLIB=
    ;;
yes)
    if test "$liteonly" = yes ; then
        AC_MSG_ERROR([you can't set iconv options at all when you set value \"yes\" to --enable-liteonly, because lite library does not have iconv support.])
    fi
    if test X$prefix = XNONE ; then
        libiconv=$ac_default_prefix
    else
        libiconv=$prefix
    fi
    ICONVINC="-I$libiconv/include"
    ICONVLIB="-L$libiconv/lib -R$libiconv/lib -liconv"
    ;;
*)
    if test "$liteonly" = yes ; then
        AC_MSG_ERROR([you can't set iconv options at all when you set value \"yes\" to --enable-liteonly, because lite library does not have iconv support.])
    fi
    ICONVINC="-I$libiconv/include"
    ICONVLIB="-L$libiconv/lib -R$libiconv/lib -liconv"
    ;;
esac

dnl *
dnl * --with-iconv-include option.
dnl *
iconv_include=unspec
AC_ARG_WITH(iconv-include,
    AC_HELP_STRING([--with-iconv-include=DIR],
        [iconv include files are in DIR []]),
    iconv_include=$withval)
case "$iconv_include" in
unspec)
    ;;
no)
    ICONVINC=
    ;;
yes)
    if test "$liteonly" = yes ; then
        AC_MSG_ERROR([you can't set iconv options at all when you set value \"yes\" to --enable-liteonly, because lite library does not have iconv support.])
    fi
    AC_MSG_WARN([You must supply DIR to --with-iconv-include option.
  Ignored.])
    ICONVINC=
    ;;
*)
    if test "$liteonly" = yes ; then
        AC_MSG_ERROR([you can't set iconv options at all when you set value \"yes\" to --enable-liteonly, because lite library does not have iconv support.])
    fi
    ICONVINC="-I$iconv_include"
    ;;
esac

if test "X$ICONVINC" != X ; then
    iconv_include="`echo X$ICONVINC | sed -e 's/^X-I//'`"
    if test ! -f "$iconv_include/iconv.h" ; then
        AC_MSG_ERROR([iconv.h doesn't exist in $iconv_include])
    fi
fi

AC_SUBST(ICONVINC)

dnl *
dnl * --with-iconv option.
dnl *
iconv=unspec
AC_ARG_WITH(iconv,
    AC_HELP_STRING([--with-iconv=LIB], [special library for iconv []]),
        iconv=$withval)
case "$iconv" in
unspec)
    ;;
no)
    ICONVLIB=
    ;;
yes)
    if test "$liteonly" = yes ; then
        AC_MSG_ERROR([you can't set iconv options at all when you set value \"yes\" to --enable-liteonly, because lite library does not have iconv support.])
    fi
    AC_MSG_WARN([You must supply LIB to --with-iconv option.
  -liconv is assumed.])
    ICONVLIB=-liconv
    ;;
*)
    if test "$liteonly" = yes ; then
        AC_MSG_ERROR([you can't set iconv options at all when you set value \"yes\" to --enable-liteonly, because lite library does not have iconv support.])
    fi
    ICONVLIB=$iconv
    ;;
esac
AC_SUBST(ICONVLIB)

dnl *
dnl * pkgmapdir.
dnl *
pkgmapdir='$(datadir)/$(PACKAGE)/map'
AC_SUBST(pkgmapdir)

dnl *
dnl * Checks for standard tools.
dnl *
AC_PROG_CC
AC_PROG_LN_S
AC_PROG_INSTALL
LT_INIT

AC_PATH_PROGS(PERL, perl, perl)

dnl *
dnl * Checks for header files.
dnl *
AC_CHECK_HEADERS(unistd.h locale.h langinfo.h pwd.h sys/param.h)

dnl *
dnl * Checks for library functions.
dnl *
AC_CHECK_FUNCS(setlocale nl_langinfo)

dnl *
dnl * Checks for iconv library.
dnl *
if test "$liteonly,$iconv,$iconv_include,$libiconv" = no,unspec,unspec,unspec ; then
    AC_MSG_CHECKING(for iconv in libc)
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
        #include <stddef.h>
        #include <stdlib.h>
        #include <iconv.h>
    ]],[[
        iconv_t i = iconv_open("ISO-8859-1", "UTF-8");
        return 0;
    ]])], [iconv_try_link=yes], [iconv_try_link=no])
    AC_MSG_RESULT($iconv_try_link)
    if test "$iconv_try_link" = yes ; then
        iconv=no
        libiconv=no
    fi
fi

if test "$liteonly,$iconv,$iconv_include,$libiconv" = no,unspec,unspec,unspec ; then
    AC_MSG_CHECKING(for iconv in libiconv)
    ICONVLIB="-liconv"
    saved_LIBS=$LIBS
    LIBS="$LIBS $ICONVLIB"
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
        #include <stddef.h>
        #include <stdlib.h>
        #include <iconv.h>
    ]],[[
        iconv_t i = iconv_open("ISO-8859-1", "UTF-8");
        return 0;
    ]])], [iconv_try_link=yes], [iconv_try_link=no])
    LIBS=$saved_LIBS
    if test "$iconv_try_link" = yes ; then
        libiconv=yes
    else
        if test X$prefix = XNONE ; then
            ICONVINC="$ICONVINC -I$ac_default_prefix/include"
            ICONVLIB="-L$ac_default_prefix/lib -R$ac_default_prefix/lib -liconv"
        else
            ICONVINC="$ICONVINC -I$prefix/include"
            ICONVLIB="-L$prefix/lib -R$prefix/lib -liconv"
        fi
        saved_CPPFLAGS=$CPPFLAGS
        saved_LIBS=$LIBS
        CPPFLAGS="$CPPFLAGS $ICONVINC"
        LIBS="$LIBS $ICONVLIB"
        AC_LINK_IFELSE([AC_LANG_PROGRAM([[
            #include <stddef.h>
            #include <stdlib.h>
            #include <iconv.h>
        ]],[[
            iconv_t i = iconv_open("ISO-8859-1", "UTF-8");
            return 0;
        ]])], [iconv_try_link=yes], [iconv_try_link=no])
        LIBS=$saved_LIBS
        CPPFLAGS=$saved_CPPFLAGS
    fi
    AC_MSG_RESULT($iconv_try_link)
    if test "$iconv_try_link" = yes ; then
        libiconv=yes
	iconv=no
    else
        ICONVINC=
        ICONVLIB=
    fi
fi

if test "$liteonly" != yes ; then
    AC_MSG_CHECKING(for iconv)
    saved_CPPFLAGS=$CPPFLAGS
    saved_LIBS=$LIBS
    CPPFLAGS="$CPPFLAGS $ICONVINC"
    LIBS="$LIBS $ICONVLIB"
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
        #include <stddef.h>
        #include <stdlib.h>
        #include <iconv.h>
    ]],[[
        iconv_t i = iconv_open("ISO-8859-1", "UTF-8");
        return 0;
    ]])], [iconv_try_link=yes], [iconv_try_link=no])
    LIBS=$saved_LIBS
    CPPFLAGS=$saved_CPPFLAGS
    AC_MSG_RESULT($iconv_try_link)
    if test "$iconv_try_link" = no ; then
        AC_MSG_ERROR(iconv function not available)
    fi
fi

dnl *
dnl * Check for codeset name for UTF-8.
dnl *
if test "$liteonly" != yes ; then
    AC_MSG_CHECKING([for codeset name $UTF8_NAME])
    saved_CPPFLAGS=$CPPFLAGS
    saved_LIBS=$LIBS
    CPPFLAGS="$CPPFLAGS $ICONVINC"
    LIBS="$LIBS $ICONVLIB"
    AC_RUN_IFELSE([AC_LANG_PROGRAM([[
        #include <stddef.h>
        #include <stdlib.h>
        #include <iconv.h>
        #define UTF8_NAME "$UTF8_NAME"
        #define ICONV_FAIL ((iconv_t)(-1))
    ]],[[
        /* Check if the codeset name UTF8_NAME is valid by performing iconv_open(). */
        int i;
        /* list of codeset names likely to exist */
        static char *codeset[] = {
            "ASCII", "ISO-8859-1", "ISO8859-1", "iso8859_1", "8859-1",
            "Shift_JIS", "SJIS", "sjis", NULL,
        };

        /* First try null conversion. */
        if (iconv_open(UTF8_NAME, UTF8_NAME) != ICONV_FAIL) return 0;

        /* Unfortunately, above check fails on certain systems, such as Solaris.
 */
        for (i = 0; codeset[i] != NULL; i++) {
            if (iconv_open(UTF8_NAME, codeset[i]) != ICONV_FAIL) return 0;
        }
        return 1;
    ]])], utf8_name_valid=yes, utf8_name_valid=no, utf8_name_valid=unknown)
    LIBS=$saved_LIBS
    CPPFLAGS=$saved_CPPFLAGS
    AC_MSG_RESULT($utf8_name_valid)
fi

dnl *
dnl * Output.
dnl *
AC_CONFIG_HEADER(include/config.h)
AC_CONFIG_FILES([Makefile
    data/Makefile
    include/Makefile
    lib/Makefile
    tools/idncheck/Makefile
    tools/idncmp/Makefile
    tools/idnconv/Makefile
    conf/Makefile
    man/Makefile
    map/Makefile
    util/Makefile
    test/Makefile
    test/common/Makefile
    test/api/Makefile
    test/asclower/Makefile
    test/auto/Makefile
    test/bidicheck/Makefile
    test/checkname/Makefile
    test/combcheck/Makefile
    test/command/Makefile
    test/comparenames/Makefile
    test/ctxjcheck/Makefile
    test/ctxocheck/Makefile
    test/decodename/Makefile
    test/delimitermap/Makefile
    test/encodename/Makefile
    test/hyphcheck/Makefile
    test/idnconv/Makefile
    test/language/Makefile
    test/languagelocal/Makefile
    test/lencheck/Makefile
    test/libidnkitlite/Makefile
    test/loadconf/Makefile
    test/localcheck/Makefile
    test/localconv/Makefile
    test/localencoding/Makefile
    test/lowercase/Makefile
    test/map/Makefile
    test/misc/Makefile
    test/nfc/Makefile
    test/nfccheck/Makefile
    test/nfkc/Makefile
    test/normalization/Makefile
    test/overflow/Makefile
    test/prefcheck/Makefile
    test/prohcheck/Makefile
    test/result/Makefile
    test/rtcheck/Makefile
    test/rtconv/Makefile
    test/tldlocal/Makefile
    test/tr46check/Makefile
    test/tr46map/Makefile
    test/unascheck/Makefile
    test/undoiferr/Makefile
    test/unicodeconv/Makefile
    test/utf8/Makefile
    test/version/Makefile
    test/width/Makefile])
AC_OUTPUT
