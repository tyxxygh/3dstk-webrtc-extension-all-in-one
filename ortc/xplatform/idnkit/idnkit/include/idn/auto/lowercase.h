/*
 * Do not edit this file!
 * This file is generated from:
 *    UnicodeData.txt (version 6.3.0)
 *    SpecialCasing.txt (version 6.3.0)
 */

#ifndef IDN_LOWERCASE_H
#define IDN_LOWERCASE_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stddef.h>

#define CASE_CODEPOINT(v)     ((v) & 0x7fffffffUL)
#define HAS_SPECIALCASING(v)  ((v) & 0x80000000UL)
#define MAX_SPECIALCASING_LENGTH 3

/*
 * Table accessor.
 */
extern unsigned long
idn__sparsemap_getlowercase(unsigned long v);

/*
 * Special lowercase conversions
 */
typedef struct {
	unsigned long codepoint;
	char *language;
	int (*contextproc)(const unsigned long *s, size_t idx);
	unsigned long lower[MAX_SPECIALCASING_LENGTH];
	int next;
} idn__specialcase_t;

extern const idn__specialcase_t
special_lowercases[];

extern int
idn__casecontext_moreabove(const unsigned long *s, size_t idx);
extern int
idn__casecontext_afteri(const unsigned long *s, size_t idx);
extern int
idn__casecontext_finalsigma(const unsigned long *s, size_t idx);
extern int
idn__casecontext_notbeforedot(const unsigned long *s, size_t idx);

#ifdef __cplusplus
}
#endif

#endif
